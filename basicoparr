/* C program illustrating the basic operation on arrays
    - array display 
    - array reverse
    - search for key in array
    - insert an element into array
    - deletion of element from array */
    
#include <stdio.h>

#define MAX 5

void display(int a[],int);
void reverse (int a[],int);
void searckey(int a[],int,int);
void insert(int a[],int,int,int );
void delete(int a[],int,int);

int main()
{
    int arr[MAX];
    int i,key,pos;
    
    printf("Enter %d number of integers  for  an array\n",MAX);
    
    for(i=0; i<MAX;i++)
    { 
        scanf("%d", &arr[i]);
    }
    
    
    display(arr,MAX);
    reverse(arr,MAX);
    
    
    printf("Enter the key to be searched in the array\n");
    
    scanf("%d", &key);
    searckey(arr,MAX,key);
    
    printf("Enter the value to be inserted into the array\n");
    scanf("%d",&key);
    
    printf("Enter the position at which %d is to be inserted into the array\n",key);
    scanf("%d",&pos);
    
    insert(arr,MAX,pos,key);
    display(arr,MAX);
    
    printf("Enter the value to be deleted from the array\n");
    scanf("%d",&key);
    
    delete(arr,MAX,key);
    display(arr,MAX);
    
    printf("Displaying array elements after the array operations\n");
    
    display(arr,MAX);
    
    return 0;
    }
    
void display(int a[],int size)
{  int  i;
   printf("The elements of array are\n");
   
   for (i=0; i<size;i++)
      printf("%d\n",a[i]);
}

void reverse (int a[],int size)
{
       int i,temp;
      // printf("The reversed array is :\n");
       
       for(i =0; i<size/2;i++)
       {
             temp         = a[i];
             a[i]       = a[size-1-i];
             a[size-1-i]= temp;
        }
       display(a,size);

}

void searckey(int a[], int size,int key)
{
       int i,j,low,high,mid,temp;

        for(i=0; i<size;i++)
        {
              for(j=i+1;j<size;j++)
              {    if(a[i]> a[j])
                   {
                        temp =a[i];
                        a[i] =a[j];
                        a[j] =temp; 
                    }
              }
        }

       low  = 0;
       high = size-1;
       mid  = (low+high)/2;
       
       while (high>=low)
       {
          if(a[mid] == key)
          {
              printf("The key %d is at position %d\n", key,mid);
              break;
          }
          
          else if (a[mid] >key)
          {
              high = mid-1;
          }
          
          else 
          {
             low = mid+1;
          }
             
        mid =(low+high)/2;
       }
       
       if(high<low)
       {
          printf("The key %d is not found in the array\n", key);
       }
}

void insert(int a[],int size,int pos, int key )
{
     int i,temp;
     temp       = a[pos-1];
     a[pos-1] = key;
     
     for(i = size-1; i>pos;i--)
     {
          a[i]= a[i-1];
     }
     
     a[i]=temp;

}

void delete(int a[],int size, int key)
{
       int i,j,low,high,mid,pos,temp;
    
       

        for(i=0; i<size;i++)
        {
              for(j=i+1;j<size;j++)
              {    if(a[i]> a[j])
                   {
                        temp =a[i];
                        a[i] =a[j];
                        a[j] =temp; 
                    }
              }
        }
       
       low  = 0;
       high = size-1;
       mid  = (low+high)/2;
       
       while (high>=low)
       {
          if(a[mid] == key)
          {
              pos = mid;
              break;
          }
          
          else if (a[mid] >key)
          {
              high = mid-1;
          }
          
          else 
          {
             low = mid+1;
          }
          mid =(low+high)/2;
       }
       
    if(pos >=0 && pos < size)
     {
   
        for(i = pos; i<size-1;i++)
       {
          a[i] = a[i+1];
       }
   
      a[i]=0;
      
   }
}
        



  
  
